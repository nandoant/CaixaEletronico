# ==============================================================================
# DOCKER-COMPOSE PARA DESENVOLVIMENTO COM CONFIGURAÇÕES EXTERNAS
# ==============================================================================
# INSTRUÇÕES:
# 1. Configure o arquivo .env com suas credenciais
# 2. Use este arquivo para desenvolvimento: docker-compose -f docker-compose.dev.secret.yml up
# ==============================================================================

version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: caixaeletronico
      POSTGRES_USER: ${DB_USERNAME:-caixaeletronico}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-caixaeletronico123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - caixaeletronico-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_USERNAME=${DB_USERNAME:-caixaeletronico}
      - DB_PASSWORD=${DB_PASSWORD:-caixaeletronico123}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    env_file:
      - .env  # Usando .env ao invés de .env.secret
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - caixaeletronico-network
    volumes:
      - ./backend/logs:/app/logs

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - caixaeletronico-network

volumes:
  postgres_data:

networks:
  caixaeletronico-network:
    driver: bridge
